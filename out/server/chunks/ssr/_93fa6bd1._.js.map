{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 6, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"","debugId":null}},
    {"offset": {"line": 24, "column": 0}, "map": {"version":3,"sources":["file:///home/ashwinsharma/HotCrunch/electronWorks/src/lib/utils.ts"],"sourcesContent":["import { clsx, type ClassValue } from \"clsx\"\nimport { twMerge } from \"tailwind-merge\"\n\nexport function cn(...inputs: ClassValue[]) {\n  return twMerge(clsx(inputs))\n}\n"],"names":[],"mappings":";;;AAAA;AACA;;;AAEO,SAAS,GAAG,GAAG,MAAoB;IACxC,OAAO,CAAA,GAAA,2JAAA,CAAA,UAAO,AAAD,EAAE,CAAA,GAAA,qIAAA,CAAA,OAAI,AAAD,EAAE;AACtB","debugId":null}},
    {"offset": {"line": 40, "column": 0}, "map": {"version":3,"sources":["file:///home/ashwinsharma/HotCrunch/electronWorks/src/components/ui/button.tsx"],"sourcesContent":["import * as React from \"react\"\nimport { Slot } from \"@radix-ui/react-slot\"\nimport { cva, type VariantProps } from \"class-variance-authority\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst buttonVariants = cva(\n  \"inline-flex items-center justify-center gap-2 whitespace-nowrap rounded-md text-sm font-medium transition-all disabled:pointer-events-none disabled:opacity-50 [&_svg]:pointer-events-none [&_svg:not([class*='size-'])]:size-4 shrink-0 [&_svg]:shrink-0 outline-none focus-visible:border-ring focus-visible:ring-ring/50 focus-visible:ring-[3px] aria-invalid:ring-destructive/20 dark:aria-invalid:ring-destructive/40 aria-invalid:border-destructive\",\n  {\n    variants: {\n      variant: {\n        default:\n          \"bg-primary text-primary-foreground shadow-xs hover:bg-primary/90\",\n        destructive:\n          \"bg-destructive text-white shadow-xs hover:bg-destructive/90 focus-visible:ring-destructive/20 dark:focus-visible:ring-destructive/40 dark:bg-destructive/60\",\n        outline:\n          \"border bg-background shadow-xs hover:bg-accent hover:text-accent-foreground dark:bg-input/30 dark:border-input dark:hover:bg-input/50\",\n        secondary:\n          \"bg-secondary text-secondary-foreground shadow-xs hover:bg-secondary/80\",\n        ghost:\n          \"hover:bg-accent hover:text-accent-foreground dark:hover:bg-accent/50\",\n        link: \"text-primary underline-offset-4 hover:underline\",\n      },\n      size: {\n        default: \"h-9 px-4 py-2 has-[>svg]:px-3\",\n        sm: \"h-8 rounded-md gap-1.5 px-3 has-[>svg]:px-2.5\",\n        lg: \"h-10 rounded-md px-6 has-[>svg]:px-4\",\n        icon: \"size-9\",\n      },\n    },\n    defaultVariants: {\n      variant: \"default\",\n      size: \"default\",\n    },\n  }\n)\n\nfunction Button({\n  className,\n  variant,\n  size,\n  asChild = false,\n  ...props\n}: React.ComponentProps<\"button\"> &\n  VariantProps<typeof buttonVariants> & {\n    asChild?: boolean\n  }) {\n  const Comp = asChild ? Slot : \"button\"\n\n  return (\n    <Comp\n      data-slot=\"button\"\n      className={cn(buttonVariants({ variant, size, className }))}\n      {...props}\n    />\n  )\n}\n\nexport { Button, buttonVariants }\n"],"names":[],"mappings":";;;;;AACA;AACA;AAEA;;;;;AAEA,MAAM,iBAAiB,CAAA,GAAA,gKAAA,CAAA,MAAG,AAAD,EACvB,+bACA;IACE,UAAU;QACR,SAAS;YACP,SACE;YACF,aACE;YACF,SACE;YACF,WACE;YACF,OACE;YACF,MAAM;QACR;QACA,MAAM;YACJ,SAAS;YACT,IAAI;YACJ,IAAI;YACJ,MAAM;QACR;IACF;IACA,iBAAiB;QACf,SAAS;QACT,MAAM;IACR;AACF;AAGF,SAAS,OAAO,EACd,SAAS,EACT,OAAO,EACP,IAAI,EACJ,UAAU,KAAK,EACf,GAAG,OAIF;IACD,MAAM,OAAO,UAAU,gKAAA,CAAA,OAAI,GAAG;IAE9B,qBACE,8OAAC;QACC,aAAU;QACV,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EAAE,eAAe;YAAE;YAAS;YAAM;QAAU;QACvD,GAAG,KAAK;;;;;;AAGf","debugId":null}},
    {"offset": {"line": 97, "column": 0}, "map": {"version":3,"sources":["file:///home/ashwinsharma/HotCrunch/electronWorks/src/app/page.tsx"],"sourcesContent":["// Import necessary modules from React and external libraries\nimport { useState, useEffect } from \"react\";\n// Assuming these are from your shadcn/ui components\nimport { Button } from \"@/components/ui/button\";\nimport { Card, CardContent, CardHeader, CardTitle } from \"./components/ui/card\";\n// Icons from lucide-react\nimport { Settings, X } from \"lucide-react\";\n// ThemeProvider for managing themes, assumed to be part of next-themes or similar\nimport { ThemeProvider, useTheme } from \"next-themes\"; // Import useTheme for demonstration purposes\n\n// Main WallCrunch component\nexport default function App() {\n  return (\n    // Wrap the WallCrunch component with ThemeProvider for theme management\n    // defaultTheme=\"system\" makes it respect the OS theme by default\n    // enableSystem allows switching between light/dark based on system preference\n    <ThemeProvider attribute=\"class\" defaultTheme=\"system\" enableSystem>\n      <WallCrunch />\n    </ThemeProvider>\n  );\n}\n\n// WallCrunch core logic component\nfunction WallCrunch() {\n  // State to hold the selected bright and dark wallpaper files\n  const [brightWallpaper, setBrightWallpaper] = useState<File | null>(null);\n  const [darkWallpaper, setDarkWallpaper] = useState<File | null>(null);\n  // Get the current theme and setter from next-themes, useful for debugging or future theme toggles\n  const { theme, setTheme } = useTheme();\n\n  // Function to handle picking a wallpaper file\n  const handlePickWallpaper = (type: \"bright\" | \"dark\") => {\n    const input = document.createElement(\"input\");\n    input.type = \"file\";\n    input.accept = \"image/*\"; // Accept only image files\n\n    // Event listener for when a file is selected\n    input.onchange = (e: Event) => {\n      const target = e.target as HTMLInputElement;\n      const file = target.files?.[0] || null; // Get the first selected file\n\n      // Set the appropriate wallpaper state based on type\n      if (type === \"bright\") {\n        setBrightWallpaper(file);\n      } else {\n        setDarkWallpaper(file);\n      }\n    };\n    input.click(); // Programmatically click the hidden input to open file dialog\n  };\n\n  // Function to clear both selected wallpapers\n  const handleClear = () => {\n    setBrightWallpaper(null);\n    setDarkWallpaper(null);\n  };\n\n  // Placeholder for save functionality (will be implemented with electronAPI as per original comment)\n  const handleSave = () => {\n    // Logic for saving wallpapers will go here\n    console.log(\"Saving wallpapers...\", { brightWallpaper, darkWallpaper });\n    // This part would typically interact with a backend or local system API (e.g., Electron)\n  };\n\n  return (\n    // Main container for the WallCrunch application\n    // The background gradient adapts based on the applied theme class ('dark:' prefix for dark mode)\n    <div className=\"min-h-screen bg-gradient-to-br from-slate-50 to-slate-100 dark:from-slate-900 dark:to-slate-800 flex flex-col items-center justify-center p-8 relative font-inter\">\n      {/* Display current theme for debugging/testing */}\n      <div className=\"absolute top-20 right-4 text-sm text-gray-500 dark:text-gray-400\">\n        Current Theme: {theme}\n      </div>\n\n      {/* Close Button (placeholder functionality) */}\n      <button\n        className=\"absolute top-4 right-4 p-2 rounded-full hover:bg-red-100 dark:hover:bg-red-900 transition-colors duration-200\"\n        aria-label=\"Close\"\n        onClick={() => { console.log(\"Close button clicked\"); }}\n      >\n        <X className=\"w-5 h-5 text-red-500\" />\n      </button>\n\n      {/* Settings Button (placeholder functionality) */}\n      <button\n        className=\"absolute top-4 left-4 p-2 rounded-full hover:bg-slate-200 dark:hover:bg-slate-800 transition-colors duration-200\"\n        aria-label=\"Settings\"\n        onClick={() => { console.log(\"Settings button clicked\"); }}\n      >\n        <Settings className=\"w-5 h-5 text-gray-600 dark:text-gray-300\" />\n      </button>\n\n      {/* Main Card component for the application UI */}\n      <Card className=\"w-full max-w-md rounded-xl shadow-lg dark:border dark:border-slate-700\">\n        <CardHeader className=\"pb-4\">\n          <CardTitle className=\"text-center text-4xl font-extrabold bg-gradient-to-r from-blue-600 to-purple-600 bg-clip-text text-transparent py-2\">\n            WallCrunch\n          </CardTitle>\n        </CardHeader>\n        <CardContent className=\"space-y-6 pt-0\">\n          {/* Section for picking wallpapers */}\n          <div className=\"flex flex-col gap-4\">\n            <Button\n              variant=\"outline\"\n              className=\"w-full h-12 text-base rounded-lg shadow-sm hover:shadow-md transition-all duration-200 dark:border-slate-600 dark:hover:bg-slate-700 dark:hover:text-white\"\n              onClick={() => handlePickWallpaper(\"bright\")}\n            >\n              {brightWallpaper ? (\n                <span className=\"truncate\">\n                  Bright Wallpaper: <span className=\"font-semibold text-blue-700 dark:text-blue-300\">{brightWallpaper.name}</span>\n                </span>\n              ) : (\n                \"Pick Bright Wallpaper\"\n              )}\n            </Button>\n            <Button\n              variant=\"outline\"\n              className=\"w-full h-12 text-base rounded-lg shadow-sm hover:shadow-md transition-all duration-200 dark:border-slate-600 dark:hover:bg-slate-700 dark:hover:text-white\"\n              onClick={() => handlePickWallpaper(\"dark\")}\n            >\n              {darkWallpaper ? (\n                <span className=\"truncate\">\n                  Dark Wallpaper: <span className=\"font-semibold text-purple-700 dark:text-purple-300\">{darkWallpaper.name}</span>\n                </span>\n              ) : (\n                \"Pick Dark Wallpaper\"\n              )}\n            </Button>\n          </div>\n\n          {/* Action buttons (Clear and Save) */}\n          <div className=\"flex gap-4\">\n            <Button\n              variant=\"secondary\"\n              className=\"flex-1 h-12 text-base rounded-lg shadow-sm hover:shadow-md transition-all duration-200 dark:hover:bg-slate-700 dark:hover:text-white\"\n              onClick={handleClear}\n              disabled={!brightWallpaper && !darkWallpaper}\n            >\n              Clear\n            </Button>\n            <Button\n              className=\"flex-1 h-12 text-base rounded-lg shadow-sm hover:shadow-md transition-all duration-200 bg-blue-600 hover:bg-blue-700 text-white disabled:opacity-50 disabled:cursor-not-allowed dark:bg-purple-600 dark:hover:bg-purple-700\"\n              onClick={handleSave}\n              disabled={!brightWallpaper || !darkWallpaper}\n            >\n              Save\n            </Button>\n          </div>\n\n          {/* Optional: Theme toggle for demonstration (can be removed if only system theme is desired) */}\n          <div className=\"flex justify-center pt-4\">\n            <Button\n              variant=\"ghost\"\n              className=\"text-sm text-gray-600 dark:text-gray-400 hover:bg-slate-200 dark:hover:bg-slate-700 rounded-md px-3 py-2\"\n              onClick={() => setTheme(theme === \"dark\" ? \"light\" : \"dark\")}\n            >\n              Toggle Theme (Current: {theme})\n            </Button>\n          </div>\n        </CardContent>\n      </Card>\n    </div>\n  );\n}\n\n"],"names":[],"mappings":"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","debugId":null}}]
}